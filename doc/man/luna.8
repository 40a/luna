.TH luna 8 "Luna Commands" "September 2016" "Luna Commands"

.SH "NAME"
luna - command to edit Luna cluster configuration.

.SH "SYNOPSIS"
\fBluna\fP [\fI--help\fP|\fI-h\fP]

\fBluna\fP \fIobject\fP [\fI--help\fP|\fI-h\fP]

\fBluna\fP \fIobject\fP \fIaction\fP [\fI--help\fP|\fI-h\fP] [\fIOPTIONS\fP...]

.SH DESCRIPTION
\fBluna\fP
is used to view and edit objects in Luna database.
.SH GETTING QUICK HELP
.TP
\fB--help\fP, \fB-h\fP
Getting list of supported objects.
.TP
\fIobject\fP \fB--help\fP, \fIobject\fP \fB-h\fP
Getting list of supported actions for object.
.TP
\fIobject\fP \fIaction\fP \fB--help\fP, \fIobject\fP \fIaction\fP \fB-h\fP
Getting list of supported options for particular object and action.
.SH OBJECTS, ACTIONS AND OPTIONS
.TP
\fBcluster\fP
Global configuration of the Luna cluster. Configuration of external services.
.RS
.TP
\fBinit\fP
Initialize cluster configuration.
.RS
.TP
\fB--nodeprefix\fP, \fB--prefix\fP, \fB-p\fP
Prefix for newly created nodes: nodeXXX, hostXXX, nXXX, etc. Default is "\fInode\fP".
.TP 
\fB--nodedigits\fP, \fB--digits\fP, \fB-d\fP
Leading zeros to node number: node01, node001, node0001, etc. Default is \fI3\fP.
.TP
\fB--path\fP
Path to store kernels, initrd, tarballs (with packed OSes), bittorrent files, scripts' templates. It is assumed that it is a HOMEDIR for user, used to run services (see bellow). Default is "\fI/opt/luna\fP"
.TP
\fB--user\fP
Name of the system user to start luna services (lweb, ltorrent). All files are needed to be accessed by daemons should be owned by this user. Default is \fIluna\fP
.RE
.TP
\fBshow\fP
Print global cluster config.
.RS
.TP
\fB--raw\fP, \fB-R\fP
Print raw JSON of the object.
.RE
.TP
\fBchange\fP
Change global cluster configuration options.
.RS
.TP
\fB--nodeprefix\fP, \fB--prefix\fP, \fB-p\fP
Prefix for newly created nodes: nodeXXX, hostXXX, nXXX, etc.
.TP
\fB--nodedigits\fP, \fB--digits\fP, \fB-d\fP
Leading zeros to node number: node01, node001, node0001, etc.
.TP
\fB--path\fP
Path to store kernels, initrd, tarballs (with packed OSes), bittorrent files, scripts' templates. User defined in \fB--user\fP should have \fBrw\fP access to this folder.
.TP
\fB--user\fP
Name of the system user is used to start luna services (lweb, ltorrent). All files are needed to be accessed by daemons should be owned by this user.
.TP
\fB--frontend_address\fP
IP address of the interface of the master node. It is being used to access services provided by \fIlweb\fP using HTTP protocol: boot scripts, installation scripts, torrent tracker. Port to reach the services is specified as \fB--frontend_port\fP. Combination http://frontend_address:frontend_port can be used for quick check.

Example:

.RS
.RS
.nf
curl "http://10.30.255.254:7050/luna?step=boot"
.fi
.RE

No default value for it! Should be set up right after \fIluna cluster init\fP command.
.RE
.TP
\fB--frontend_port\fP
TCP port of the HTTP reverse proxy server. Default is 7050. Please don't mix it with \fB--server_port\fP.
.TP
\fB--server_port\fP
Port \fIlweb\fP to listen on localhost. Default is 7051. Service \fIlweb\fP opens socket only on 127.0.0.1 and port specified at \fB--server_port\fP. To reach \fIlweb\fP from remote HTTP reverse proxy server is using. Nginx is default. URL http://localhost:server_port allows to connect derectly to lweb avoiding HTTP-proxy.

Example:

.RS
.RS
.nf
curl "http://localhost:7051/luna?step=boot"
.fi
.RE
.RE
.TP
\fB--tracker_interval\fP
"Interval in seconds that the client should wait between sending regular requests to the tracker." \fIhttps://wiki.theory.org/BitTorrentSpecification\fP. Default is \fI10\fP sec.
.TP
\fB--tracker_min_interval\fP
"Minimum announce interval. If present clients must not reannounce more frequently than this." \fIhttps://wiki.theory.org/BitTorrentSpecification\fP. Default is \fI5\fP sec.
.TP
\fB--tracker_maxpeers\fP
Torrent tracker max allowed peers. It is uppper bound for \fInumwant\fP: "Number of peers that the client would like to receive from the tracker." \fIhttps://wiki.theory.org/BitTorrentSpecification\fP. Default is \fI200\fP.
.TP
\fB--torrent_listen_port_min\fP
\fIltorrent\fP tunable. Start of the range of portrs opened to accept connections from other clients. Default is \fI7052\fP.
.TP
\fB--torrent_listen_port_max\fP
\fIltorrent\fP tunable. End of the range of ports opened to accept connections from other clients. Default is \fI7200\fP.
.TP
\fB--torrent_pidfile\fP
Pid file for \fIltorrent\fP. Default is \fI/run/luna/ltorrent.pid\fP.
.TP
\fB--lweb_num_proc\fP
Number of worker processes for \fIlweb\fP. If 0 (default), is will be autedected and more likely will be equal to the number of cores.
.TP
\fB--cluster_ips\fP
Valid for clusterred configuration in Luna. Should be empty for standalone config.
.TP
\fB--named_include_file\fP
Path to the file managed by luna to serve network zones. Administrator needs to include this file to his \fI/etc/named.conf\fP. Default is \fI/etc/named.luna.zones\fP.
.TP
\fB--named_zone_dir\fP
Path to folder where BIND NAMED is expecting to find zone files to load. Should be equal to \fIoptions { directory "" }\fP direcive from \fInamed.conf\fP. Default is \fI/var/named\fP.
.RE
.TP
\fBsync\fP
Command to rsync directories (\fB--path\fP) across master nodes in HA environment. Not vaid if option \fB--cluster_ips\fP is not configured.
.TP
\fBmakedns\fP
Command to create zone files in \fB--named_zone_dir\fP and create/overwrite \fB--named_include_file\fP. It uses templates \fItempl_named_conf.cfg\fP, \fItempl_zone.cfg\fP and \fItempl_zone_arpa.cfg\fP.
.TP
\fBmakedhcp\fP
Command to create dhcp config for BIND DHCPD server. To use this command \fBnetwork\fP should be added to Luna configuration, and interface of the master node shoud have IP address in the range of this \fBnetwork\fP. Please note, that cluster requires 2 times more IPs that the number of nodes. One half goes to IPs will be statically assigned to nodes, but second part is being required by nodes to boot. It will be used only in PXE environment. Even if node is know to Luna, Luna will not add dhcp reservation for it. This can be ajusted manually, though - create static \fIdhcpd.conf\fP based on the list of known nodes.
.RS
.TP
\fB--no_ha\fP
In HA environment do not use native DHCPD HA feature. Luna will just put the same copy of \fIdhcpd.conf\fP on both master nodes to support Active/Passive HA config. Has no effect for standalone setups and can be ommited.
.TP
\fB--network\fP, \fB-N\fP
Name of the \fBnetwork\fP object.
.TP
\fB--start_ip\fP, \fB-s\fP
Start of the DHCP range.
.TP
\fB--end_ip\fP, \fB-e\fP
End of the DHCP range.
.RE
.TP
\fBdelete\fP
Delete cluster object from mongodb. Command requires all the other cluster objects to be deleted already. If you need to wipe cluster and know what you are doing, use MongoDB commands to nuke Luna config:
.RS

.RS
.nf
# mongo
> use luna
> db.dropDatabase()
.fi
.RE

Please note, it will not affect any files on disks. So all osimages, torrent files, configs, templates will be untouched.
.RE
.RE
.TP
\fBosimage\fP
Object reflects OS files needs to be delivered on nodes.
.RS
.TP
\fBlist\fP
Getting list of the configured objects for brief overview.
.TP
\fBshow\fP
Detailed information about object.
.RS
.TP
\fB--name\fP, \fB-n\fP
Name of the object.
.TP
\fB--raw\fP, \fB-R\fP
Print raw JSON of the object.
.RE
.TP
\fBadd\fP
Add \fBosimage\fP object to Luna configuration. Please make sure that kernel rpm is installed.
.RS
.TP
\fB--name\fP, \fB-n\fP
Name of the object.
.TP
\fB--path\fP, \fB-p\fP
Path to reach the files of the image.
.TP
\fB--kernver\fP, \fB-k\fP
Kernel version of the image.
.TP
\fB--kernopts\fP, \fB-o\fP
Kernel options are used to pass additional parameters to kernel on boot.
.RE
.TP
\fBchange\fP
Change parameters of the \fBosimage\fP object.
.RS
.TP
\fB--name\fP, \fB-n\fP
Name of the object.
.TP
\fB--path\fP, \fB-p\fP
Path where files (directory tree structure) of the image is being stored.
.TP
\fB--kernver\fP, \fB-k\fP
Kernel version of the image.
.TP
\fB--kernopts\fP, \fB-o\fP
Kernel options are used to pass additional parameters to kernel on boot.
.TP
\fB--dracutmodules\fP, \fB-d\fP
Dracut modules for initrd. Comma separated list of the dracut modules. \fBdracut\fP(8) supports \fB-a\fP and \fB-o\fP options, so modules prepended with '-' sign (minus) will bo ommited on initr build (\fB-o\fP).
.TP
\fB--kernmodules\fP, \fB-m\fP
Kernel modules for initrd. Comma separated list of the kernel modules. \fBdracut\fP(8) supports \fB--add-drivers\fP and \fB--omit-drivers\fP options, so modules prepended with '-' sign (minus) will bo ommited on initr build (\fB--omit-drivers\fP).
.RE
.TP
\fBpack\fP
Command to 'pack' osimage, i.e. make it available for nodes to boot. Under the hood it creates tarball from directory tree, create torrent file, put everything to \fI~luna/torrents/\fP, then build initrd and copy it with kernel to \fI~luna/boot/\fP. It also fills values for \fIinitrdfile\fP, \fIkernfile\fP, \fItarball\fP and \fItorrent\fP variables in \fBluna osimage show\fP output. In addition, if Luna in configured to working in HA environment (\fB--cluster_ips\fP) \fBpack\fP syncronizes data for the osimage across all the master nodes.
.RS
.TP
\fB--name\fP, \fB-n\fP
Name of the object.
.TP
\fB--image\fP, \fB-i\fP
Create tarball and bittorrent file only.
.TP
\fB--boot\fP, \fB-b\fP
Prepare kernel and initrd only.
.RE
.TP
\fBsync\fP
Command to syncronize images between the master nodes (\fB--cluster_ips\fP).
.RS
.TP
\fB--name\fP, \fB-n\fP
Name of the object.
.RE
.TP
\fBclone\fP
Command to clone osimage object including underlying files. As a result second identical object will be created with copy of all the files in another path. Convenient way not to recreate osimage from scratch or take a snapshot of what was already done.
.RS
.TP
\fB--name\fP, \fB-n\fP
Name of the object.
.TP
\fB--to\fP, \fB-t\fP
Name of the new (cloned) object.
.TP
\fB--path\fP, \fB-p\fP
Path to reach the files of the image.
.RE
.TP
\fBrename\fP
Rename object in Luna database.
.RS
.TP
\fB--name\fP, \fB-n\fP
Name of the object.
.TP
\fB--newname\fP, \fB--nn\fP
New name of the object.
.RE
.TP
\fBdelete\fP
Delete object from Luna database.
.RS
.TP
\fB--name\fP, \fB-n\fP
Name of the object.
.RE
.RE
.TP
\fBbmcsetup\fP
Object describes BMC configuration of the node. Paramaters from this object will be used to render script from \fItempl_install.cfg\fP
.RS
.TP
\fBlist\fP
Getting list of the configured objects for brief overview.
.IP
\fBshow\fP
Detailed information about object.
.RS
.TP
\fB--name\fP, \fB-n\fP
Name of the object.
.TP
\fB--raw\fP, \fB-R\fP
Print raw JSON of the object.
.RE
.TP
\fBadd\fP
Add \fBbmcsetup\fP object to Luna database.
.RS
.TP
\fB--name\fP, \fB-n\fP
Name of the object.
.TP
\fB--user\fP, \fB-u\fP
Username to reach BMC from remote. default is \fIladmin\fP.
.TP
\fB--password\fP, \fB-p\fP
Password to reach BMC from remote. Default is \fIladmin\fP.
.TP
\fB--userid\fP, \fB-I\fP
User ID for user. Default is \fI3\fP.
.TP
\fB--netchannel\fP, \fB-N\fP
Channel number for LAN settings of the BMC. Default is \fI1\fP.
.TP
\fB--mgmtchannel\fP, \fB-M\fP
Management channel of the BMC. Default is \fI1\fP.
.RE
\fBchange\fP
Change \fBbmcsetup\fP object to Luna database.
.RS
.TP
\fB--name\fP, \fB-n\fP
Name of the object.
.TP
\fB--user\fP, \fB-u\fP
Username to reach BMC from remote. default is \fIladmin\fP.
.TP
\fB--password\fP, \fB-p\fP
Password to reach BMC from remote. Default is \fIladmin\fP.
.TP
\fB--userid\fP, \fB-I\fP
User ID for user. Default is \fI3\fP.
.TP
\fB--netchannel\fP, \fB-N\fP
Channel number for LAN settings of the BMC. Default is \fI1\fP.
.TP
\fB--mgmtchannel\fP, \fB-M\fP
Management channel of the BMC. Default is \fI1\fP.
.RE
.TP
\fBrename\fP
Rename object in Luna database.
.RS
.TP
\fB--name\fP, \fB-n\fP
Name of the object.
.TP
\fB--newname\fP, \fB--nn\fP
New name of the object.
.RE
.TP
\fBdelete\fP
Delete object from Luna database.
.RS
.TP
\fB--name\fP, \fB-n\fP
Name of the object.
.RE
.RE
.TP
\fBnetwork\fP
Object allows to manage network configuration and IP addresses of the cluster objects.
.RS
.TP
\fBlist\fP
Getting list of the configured objects for brief overview.
.TP
\fBshow\fP
Detailed information about object.
.RS
.TP
\fB--name\fP, \fB-n\fP
Name of the object.
.TP
\fB--raw\fP, \fB-R\fP
Print raw JSON of the object.
.RE
.TP
\fBadd\fP
Add \fBnetwork\fP definition to Luna database.
.RS
.TP
\fB--name\fP, \fB-n\fP
Name of the object.
.TP
\fB--network\fP, \fB-N\fP
Network. Can be any IP address. Resulting network address will be calculated based on \fB--prefix\fP. For example 10.30.4.1/16 will be converted to 10.30.0.0.
.TP
\fB--prefix\fP, \fB-P\fP
Network prefix.
.TP
\fB--ns_hostname\fP
Nameserver for zone file (IN NS). See \fItempl_zone.cfg\fP and \fItempl_zone_arpa.cfg\fP for details.
.TP
\fB--ns_ip\fP
IP address of the nameserver. Most likely will be one of the IP addresses (in corresponding IP range) assigned to master node. See \fItempl_zone.cfg\fP and \fItempl_zone_arpa.cfg\fP for details.
.RE
.TP
\fBchange\fP
Change \fBnetwork\fP object to Luna database.
.RS
.TP
\fB--name\fP, \fB-n\fP
Name of the object.
.TP
\fB--network\fP, \fB-N\fP
Network. Can be any IP address. Resulting network address will be calculated based on \fB--prefix\fP. For example 10.30.4.1/16 will be converted to 10.30.0.0.
.TP
\fB--prefix\fP, \fB-P\fP
Network prefix.
.TP
\fB--ns_hostname\fP
Nameserver for zone file (IN NS). See \fItempl_zone.cfg\fP and \fItempl_zone_arpa.cfg\fP for details.
.TP
\fB--ns_ip\fP
IP address of the nameserver. Most likely will be one of the IP addresses (in corresponding IP range) assigned to master node. See \fItempl_zone.cfg\fP and \fItempl_zone_arpa.cfg\fP for details.
.TP
\fB--reserve\fP
\fIFor advanced usage.\fP Locks IP from assigning to any cluster's device or host. This option will mark particualar IP as 'occupied'. Please, consider to use \fBotherdev\fP first. This option will not assign any name for IP, so IP address will be ignored during zone creation.
.TP
\fB--release\fP
\fIFor advanced usage.\fP Releases occupied IP. This option does not check if IP is assigned to any \fBnode\fP/\fBswitch\fP/\fBotherdev\fP object, so can cause IP conflicts or other instabilities in the cluster.
.RE
.TP
\fBrename\fP
Rename object in Luna database.
.RS
.TP
\fB--name\fP, \fB-n\fP
Name of the object.
.TP
\fB--newname\fP, \fB--nn\fP
New name of the object.
.RE
.TP
\fBdelete\fP
Delete object from Luna database.
.RS
.TP
\fB--name\fP, \fB-n\fP
Name of the object.
.RE
.RE
.TP
\fBgroup\fP
Common configuration for the group of nodes. Most of the changes in the configuration of the cluster will be performed in this object.
.RS
.TP
\fBlist\fP
Getting list of the configured objects for brief overview.
.TP
\fBshow\fP
Detailed information about object.
.RS
.TP
\fB--name\fP, \fB-n\fP
Name of the object.
.TP
\fB--raw\fP, \fB-R\fP
Print raw JSON of the object.
.RE
.TP
\fBadd\fP
Add \fBgroup\fP of the nodes to Luna cluster.
.RS
.TP
\fB--name\fP, \fB-n\fP
Name of the object.
.TP
\fB--osimage\fP, \fB-o\fP
Name of the \fBosimage\fP to be assigned to group of nodes.
.TP
\fB--bmcsetup\fP, \fB-b\fP
Name of the \fBbmcsetup\fP object to configure BMC of nodes.
.TP
\fB--bmcnetwork\fP, \fB--bn\fP
Name of the \fBnetwork\fP object. IP addresses from this network will be assigned to BMC. See \fItempl_install.cfg\fP for details.
.TP
\fB--interface\fP, \fB-i\fP
Name of the interface of the node in group. It is assumed that al nodes in group have the same (or similar) hardware configuration, which is typical for the HPC cluster: \fIem1\fP, \fIp2p1\fP, \fIeno1\fP, etc. 

.RS
\fBPLEASE NOTE\fP On the early stage of the cluster install process it is hard or impossible to figure out the proper name of the imterfaces and other hardware config, so the best scenario here is to create group with name of the interface picked up by random, for instance \fIeth0\fP. Then add one \fBnode\fP object to the group and configure to boot it in service mode (see below). In the following example \fBosimage\fP named \fIcompute\fP as well as 2 networks \fIcluster\fP and \fIipmi\fP need to be created upfront.

Example:

.RS
.nf
# luna group add --name service --osimage compute --interface eth0
# luna group change --name service --interface eth0 --setnet cluster
# luna group change --name service --bmcnetwork --setnet ipmi
# luna node add --name servicenode --group service
# luna node change --name servicenode --setupbmc n
# luna node change --name servicenode --service n
.fi
.RE

Then boot node and inspect hardware configuration in dracut environment: interface naming, physical disk location and proceed with \fBgroup\fP configuration.
.RE
.RE
.TP
\fBchange\fP
Change configuration for the group of nodes.
.RS
.TP
\fB--name\fP, \fB-n\fP
Name of the object.
.TP
\fB--osimage\fP, \fB-o\fP
Name of the \fBosimage\fP to be assigned to group of nodes.
.TP
\fB--prescript\fP, \fB--pre\fP
Display/edit bash pre-install script. This script is being executed on the very early stage of the boot/install process. In conjunction with \fB-e\fP this parameter opens text editor (defined in \fBEDITOR\fP environment or \fBvi\fP). Parameters suports I/O redirection (pipes).

Example:
.RS
.RS
.nf
# echo "echo 'do something'" | luna group change --name service --prescript -e
.fi
.RE
.RE

.TP
\fB--partscript\fP, \fB--part\fP
Display/edit bash partitioning script. Luna does not support paritioning definititions (like anaconda, for example), so this is where \fB--partscript\fP comes into play. In conjunction with \fB-e\fP this parameter opens text editor (defined in \fBEDITOR\fP environment or \fBvi\fP). Parameters suports I/O redirection (pipes). By default following commands exist in installer environment: parted, partx, mkfs.ext2, mkfs.ext3, mkfs.ext4, mkfs.xfs (See \fI95luna/module-setup.sh\fP). It is expected that partscript will perform partitioning and creation of the filesystems amd mount filesystems under /sysroot where image of the operation system (\fBosimage\fP) will be un-packed. By default group has \fB--partscript\fP for diskless boot:

Example:
.RS

.RS
.nf
mount -t tmpfs tmpfs /sysroot
.fi
.RE


Diskfull nodes a bit more complicated. This is far-for-ideal example, but allows to illustrate main idea:

.RS
.nf
parted /dev/sda -s 'mklabel msdos'
parted /dev/sda -s 'rm 1; rm 2'
parted /dev/sda -s 'mkpart p ext2 1 256m'
parted /dev/sda -s 'mkpart p ext3 256m 100%'
parted /dev/sda -s 'set 1 boot on'
mkfs.ext2 /dev/sda1
mkfs.ext4 /dev/sda2
mount /dev/sda2 /sysroot
mkdir /sysroot/boot
mount /dev/sda1 /sysroot/boot
.fi
.RE

There are several issues in the primer above. First, it does not care about partitions already exists on disk. And second, it has a really critial issue here: it formats first available disk (sda) without checking if the disk we want to wipe can be wiped. Some systems have more that one disk. So example above should never be concidered for production use. Well behaved scripts have to do some checks before:

.RS
.nf
PATHTODEV=/dev/disk/by-path/pci-0000:02:00.0-scsi-0:2:0:0
SCSI_DEVICE="0:2:0:0"   # from /sys/block/sda/device/scsi_device/
SIZE=584843264          # from /sys/block/sda/size
MODEL="PERC H730 Mini"  # from /sys/block/sda/device/model

DISK=$(/usr/bin/basename $(/usr/bin/readlink -f ${PATHTODEV}))

if [ ! ${SIZE} -eq $(cat /sys/block/${DISK}/size) ]; then
    echo "ERROR! Size of the /dev/${DISK} is not ${SIZE}. Stoping"
    exit 1
fi
if [ ! "${MODEL}" = "$(/bin/cat /sys/block/${DISK}/device/model | /usr/bin/sed 's/[\t ]*$//')" ]; then
    echo "ERROR! Model of the /dev/${DISK} is not ${MODEL}. Stoping"
    exit 2
fi
if [ ! "${SCSI_DEVICE}" = "$(/usr/bin/ls /sys/block/${DISK}/device/scsi_device/)" ]; then
    echo "ERROR! SCSI device address of the /dev/${DISK} is not ${SCSI_DEVICE}. Stoping"
    exit 3
fi

parted /dev/${DISK} -s 'mklabel msdos'
partx -g -s /dev/${DISK} | awk '{print $1}' | while read PARTNUM; do
    parted /dev/${DISK} -s "rm ${PARTNUM}"
done
parted /dev/${DISK} -s 'mkpart p ext2 1 512m'
parted /dev/${DISK} -s 'mkpart p ext4 512m 100%'
parted /dev/${DISK} -s 'set 1 boot on'
mkfs.ext2 /dev/${DISK}1
mkfs.ext4 /dev/${DISK}2
mount /dev/${DISK}2 /sysroot
mkdir /sysroot/boot
mount /dev/${DISK}1 /sysroot/boot
.fi
.RE
